{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name puzzle.move, :imports nil, :requires {model puzzle.model, puzzle.model puzzle.model}, :uses nil, :defs {adaptCoord {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 72, :column 7, :end-line 72, :end-column 17, :arglists (quote ([coord move]))}, :name puzzle.move/adaptCoord, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 17, :method-params ([coord move]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coord move]))}, canMoveTo {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([vecs coord]))}, :name puzzle.move/canMoveTo, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 16, :method-params ([vecs coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vecs coord]))}, doMove {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 84, :column 7, :end-line 84, :end-column 13, :arglists (quote ([vecs coord move]))}, :name puzzle.move/doMove, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 13, :method-params ([vecs coord move]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vecs coord move]))}, oneUp {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([coor]))}, :name puzzle.move/oneUp, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 12, :method-params ([coor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coor]))}, oneDown {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 16, :column 7, :end-line 16, :end-column 14, :arglists (quote ([coor]))}, :name puzzle.move/oneDown, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 14, :method-params ([coor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coor]))}, moveCoord {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 96, :column 9, :end-line 96, :end-column 18, :arglists (quote ([vecs coord]))}, :name puzzle.move/moveCoord, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 18, :method-params ([vecs coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vecs coord]))}, oneLeft {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 22, :column 7, :end-line 22, :end-column 14, :arglists (quote ([coor]))}, :name puzzle.move/oneLeft, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 14, :method-params ([coor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coor]))}, oneRight {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 28, :column 7, :end-line 28, :end-column 15, :arglists (quote ([coor]))}, :name puzzle.move/oneRight, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 15, :method-params ([coor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coor]))}, findMove {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([vecs coord]))}, :name puzzle.move/findMove, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 15, :method-params ([vecs coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vecs coord]))}, functor1 {:protocol-inline nil, :meta {:file "C:\\Users\\TomdeBoer\\Dropbox (Personal)\\00_Tom_eigen\\Web-Development\\ClosureScript\\Puzzle\\git_1\\src\\puzzle\\move.cljs", :line 5, :column 7, :end-line 5, :end-column 15, :arglists (quote ([func parm1]))}, :name puzzle.move/functor1, :variadic false, :file "src\\puzzle\\move.cljs", :end-column 15, :method-params ([func parm1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([func parm1]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :x :butIs}, :order [:x :y :butIs]}, :doc nil}